
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xdaPV\x08\xc3M\x97\xd1J`\x92>\xce\x9c\xbd\x9a'
    
_lr_action_items = {'PEEK':([111,152,154,169,198,221,252,314,329,334,358,359,360,363,366,367,372,],[137,137,-86,-69,-68,-75,-85,-76,-81,-87,-78,-88,-89,-79,-77,-80,-82,]),'TRANS':([0,1,4,41,50,56,67,88,110,123,169,170,171,176,177,189,192,198,238,240,241,243,297,298,317,319,],[6,6,-59,-54,-6,-7,-19,-53,-9,-14,-69,-23,-21,-22,-20,-15,-13,-68,-17,6,-16,-18,-12,-11,-8,-10,]),'STAR':([4,17,19,55,70,139,141,144,149,153,156,158,161,162,164,165,196,199,204,209,212,235,253,255,257,260,266,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,296,302,306,312,315,327,328,335,342,344,347,355,364,365,374,375,380,381,382,385,],[-59,-40,-39,-38,94,-127,-126,-105,-93,-90,-125,-92,-96,-130,220,-128,220,-95,220,-91,-121,-120,220,220,-101,-122,220,-129,220,220,220,-106,220,220,220,220,220,220,-107,220,220,220,220,220,-103,-124,-94,-123,-125,220,220,-102,-83,-104,220,220,-84,-98,-131,-131,-100,-97,-99,]),'SLASH':([4,17,19,55,139,141,144,149,153,156,158,161,162,164,165,196,199,204,209,212,235,253,255,257,260,266,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,296,302,306,312,315,327,328,335,342,344,347,355,364,365,374,375,380,381,382,385,],[-59,-40,-39,-38,-127,-126,-105,-93,-90,-125,-92,-96,-130,228,-128,228,-95,228,-91,-121,-120,228,228,-101,-122,228,-129,228,228,228,-106,228,228,228,228,228,228,-107,228,228,228,228,228,-103,-124,-94,-123,-125,228,228,-102,-83,-104,228,228,-84,-98,-131,-131,-100,-97,-99,]),'FLOATNUMBER':([111,138,147,152,154,159,168,169,197,198,200,213,214,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,248,252,301,303,304,309,313,314,329,334,343,354,358,359,360,363,366,367,372,377,383,],[139,139,139,139,-86,139,139,-69,139,-68,139,139,139,139,139,139,139,-75,139,139,139,139,139,139,139,139,139,139,139,139,-85,139,139,139,139,139,-76,-81,-87,139,139,-78,-88,-89,-79,-77,-80,-82,139,139,]),'VOID':([0,1,4,41,50,56,67,88,104,110,123,124,131,169,170,171,176,177,189,192,198,238,240,241,243,292,297,298,317,319,322,352,],[2,2,-59,-54,-6,-7,-19,-53,2,-9,-14,2,2,-69,-23,-21,-22,-20,-15,-13,-68,-17,2,-16,-18,-27,-12,-11,-8,-10,-28,-26,]),'GLOBAL':([0,1,4,41,50,56,67,88,110,123,169,170,171,176,177,189,192,198,238,240,241,243,297,298,317,319,],[3,3,-59,-54,-6,-7,-19,-53,-9,-14,-69,-23,-21,-22,-20,-15,-13,-68,-17,3,-16,-18,-12,-11,-8,-10,]),'NUMBER':([95,111,114,138,147,152,154,159,168,169,197,198,200,213,214,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,248,252,301,303,304,309,313,314,329,334,343,354,358,359,360,363,366,367,372,377,383,],[118,141,173,141,141,141,-86,141,141,-69,141,-68,141,141,141,141,141,141,141,-75,141,141,141,141,141,141,141,141,141,141,141,141,-85,141,141,141,141,141,-76,-81,-87,141,141,-78,-88,-89,-79,-77,-80,-82,141,141,]),'NE':([4,17,19,55,139,141,144,149,153,156,158,161,162,164,165,196,199,204,209,212,235,253,255,257,260,266,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,296,302,306,312,315,327,328,335,342,344,347,355,364,365,374,375,380,381,382,385,],[-59,-40,-39,-38,-127,-126,-105,-93,-90,-125,-92,-96,-130,223,-128,223,-95,223,-91,-121,-120,223,223,-101,-122,223,-129,223,-119,-111,-106,-113,-115,-109,-110,-112,-108,-107,-118,-114,223,223,223,-103,-124,-94,-123,-125,223,223,-102,-83,-104,223,223,-84,-98,-131,-131,-100,-97,-99,]),'IDENT':([0,1,2,4,9,13,17,19,25,26,27,28,32,33,34,35,37,38,39,41,43,47,48,50,51,55,56,61,62,65,67,70,82,85,87,88,91,94,95,96,104,106,109,110,111,121,122,123,124,125,126,128,129,130,131,133,138,143,147,152,154,155,159,162,168,169,170,171,176,177,180,186,189,192,195,197,198,200,201,202,203,205,206,207,210,211,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,238,240,241,242,243,247,248,249,252,287,292,297,298,299,301,303,304,307,308,309,310,313,314,317,319,320,322,324,329,334,337,343,352,354,358,359,360,361,363,366,367,371,372,373,377,378,383,],[4,4,-41,-59,4,4,-40,-39,4,4,4,4,4,4,4,4,4,4,4,-54,4,4,4,-6,4,-38,-7,4,4,4,-19,4,4,4,4,-53,4,4,4,4,4,4,4,-9,4,4,4,-14,4,4,4,4,-43,-42,4,4,4,4,4,4,-86,4,4,-39,4,-69,-23,-21,-22,-20,4,4,-15,-13,4,4,-68,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-75,4,4,4,4,4,4,4,4,4,4,4,4,4,-17,4,-16,4,-18,4,4,4,-85,-31,-27,-12,-11,4,4,4,4,4,4,4,4,4,-76,-8,-10,4,-28,4,-81,-87,-34,4,-26,4,-78,-88,-89,4,-79,-77,-80,4,-82,4,4,4,4,]),'NEW':([111,138,147,152,154,159,168,169,197,198,200,213,214,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,248,252,301,303,304,309,313,314,329,334,343,354,358,359,360,363,366,367,372,377,383,],[143,143,143,143,-86,143,143,-69,143,-68,143,143,143,143,143,143,143,-75,143,143,143,143,143,143,143,143,143,143,143,143,-85,143,143,143,143,143,-76,-81,-87,143,143,-78,-88,-89,-79,-77,-80,-82,143,143,]),'RIGHTSHIFT':([4,17,19,55,139,141,144,149,153,156,158,161,162,164,165,196,199,204,209,212,235,253,255,257,260,266,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,296,302,306,312,315,327,328,335,342,344,347,355,364,365,374,375,380,381,382,385,],[-59,-40,-39,-38,-127,-126,-105,-93,-90,-125,-92,-96,-130,229,-128,229,-95,229,-91,-121,-120,229,229,-101,-122,229,-129,229,-119,229,-106,229,229,-109,229,229,-108,-107,-118,229,229,229,229,-103,-124,-94,-123,-125,229,229,-102,-83,-104,229,229,-84,-98,-131,-131,-100,-97,-99,]),'CHIP':([111,138,147,152,154,159,168,169,197,198,200,213,214,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,248,252,301,303,304,309,313,314,329,334,343,354,358,359,360,363,366,367,372,377,383,],[140,140,140,140,-86,140,140,-69,140,-68,140,140,140,140,140,140,140,-75,140,140,140,140,140,140,140,140,140,140,140,140,-85,140,140,140,140,140,-76,-81,-87,140,140,-78,-88,-89,-79,-77,-80,-82,140,140,]),'DOT':([4,17,19,55,135,139,141,144,149,153,156,158,161,162,163,165,199,209,257,260,268,300,302,306,312,315,327,342,344,347,350,365,368,370,374,375,376,380,381,382,385,],[-59,-40,-39,-38,-130,-127,-126,201,-93,-90,-125,-92,-96,-130,216,-128,-95,-91,-101,-122,-129,324,-103,-124,-94,-123,-125,-102,-83,-104,361,-84,371,373,-98,-131,378,-131,-100,-97,-99,]),'LEFTSHIFT':([4,17,19,55,139,141,144,149,153,156,158,161,162,164,165,196,199,204,209,212,235,253,255,257,260,266,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,296,302,306,312,315,327,328,335,342,344,347,355,364,365,374,375,380,381,382,385,],[-59,-40,-39,-38,-127,-126,-105,-93,-90,-125,-92,-96,-130,218,-128,218,-95,218,-91,-121,-120,218,218,-101,-122,218,-129,218,-119,218,-106,218,218,-109,218,218,-108,-107,-118,218,218,218,218,-103,-124,-94,-123,-125,218,218,-102,-83,-104,218,218,-84,-98,-131,-131,-100,-97,-99,]),'LE':([4,17,19,55,139,141,144,149,153,156,158,161,162,164,165,196,199,204,209,212,235,253,255,257,260,266,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,296,302,306,312,315,327,328,335,342,344,347,355,364,365,374,375,380,381,382,385,],[-59,-40,-39,-38,-127,-126,-105,-93,-90,-125,-92,-96,-130,226,-128,226,-95,226,-91,-121,-120,226,226,-101,-122,226,-129,226,-119,-111,-106,-113,226,-109,-110,-112,-108,-107,-118,226,226,226,226,-103,-124,-94,-123,-125,226,226,-102,-83,-104,226,226,-84,-98,-131,-131,-100,-97,-99,]),'SEMI':([4,17,19,29,30,36,46,49,55,62,73,74,75,92,97,100,113,116,117,118,119,120,139,141,144,149,153,156,158,161,162,164,165,178,190,196,199,209,212,235,237,246,250,257,260,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,290,296,302,305,306,312,315,318,321,339,342,344,347,348,357,365,369,374,375,380,381,382,385,],[-59,-40,-39,-2,50,56,67,-61,-38,85,-67,-60,-63,-2,-2,123,171,-65,-64,-66,-62,177,-127,-126,-105,-93,-90,-125,-92,-96,-130,221,-128,-2,-2,252,-95,-91,-121,-120,287,292,298,-101,-122,-129,-116,-119,-111,-106,-113,-115,-109,-110,-112,-108,-107,-118,-114,314,-117,-2,322,-103,329,-124,-94,-123,337,-2,352,-102,-83,-104,358,367,-84,372,-98,-131,-131,-100,-97,-99,]),'STATIC_CAST':([111,138,147,152,154,159,168,169,197,198,200,213,214,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,248,252,301,303,304,309,313,314,329,334,343,354,358,359,360,363,366,367,372,377,383,],[145,145,145,145,-86,145,145,-69,145,-68,145,145,145,145,145,145,145,-75,145,145,145,145,145,145,145,145,145,145,145,145,-85,145,145,145,145,145,-76,-81,-87,145,145,-78,-88,-89,-79,-77,-80,-82,145,145,]),')':([4,17,19,40,41,45,47,49,51,52,53,54,55,57,58,60,66,68,69,71,73,74,75,76,77,78,79,80,81,84,88,91,93,105,112,115,116,117,118,119,134,135,136,139,141,144,149,153,156,158,161,162,165,172,173,174,188,193,194,199,204,209,212,214,235,236,245,247,254,255,257,259,260,261,266,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,293,294,295,301,302,303,306,309,312,315,320,323,325,326,327,328,330,331,332,333,338,340,342,344,345,346,347,355,362,365,374,375,377,379,380,381,382,383,384,385,],[-59,-40,-39,-2,-54,-2,-2,-61,-2,-2,-2,-2,-38,-2,-2,83,90,-45,92,-46,-67,-60,-63,97,98,99,100,101,102,-2,-53,-2,-47,133,-44,-48,-65,-64,-66,-62,-2,-130,-2,-127,-126,-105,-93,-90,-125,-92,-96,-130,-128,-52,-50,-51,-2,249,250,-95,260,-91,-121,-2,-120,-49,291,-2,-74,-73,-101,305,-122,306,311,312,-129,-116,-119,-111,-106,-113,-115,-109,-110,-112,-108,-107,-118,-114,-117,315,-37,-36,321,-2,-103,-2,-124,-2,-94,-123,-2,-2,-72,342,-125,344,-2,-2,347,348,-35,353,-102,-83,356,357,-104,365,369,-84,-98,-131,-2,382,-131,-100,-97,-2,385,-99,]),'(':([3,4,6,7,8,14,15,16,20,21,23,29,31,111,137,138,145,146,147,148,150,151,152,154,157,159,160,162,166,167,168,169,190,197,198,200,213,214,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,248,252,257,264,301,303,304,309,313,314,329,334,343,354,358,359,360,363,366,367,372,375,377,380,383,],[25,-59,26,27,28,32,33,34,37,38,39,47,51,147,195,147,202,203,147,205,206,207,147,-86,211,147,213,214,233,234,147,-69,247,147,-68,147,147,147,147,147,147,147,-75,147,147,147,147,147,147,147,147,147,147,147,147,-85,303,309,147,147,147,147,147,-76,-81,-87,147,147,-78,-88,-89,-79,-77,-80,-82,377,147,383,147,]),'IS_INVALID':([111,138,147,152,154,159,168,169,197,198,200,213,214,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,248,252,301,303,304,309,313,314,329,334,343,354,358,359,360,363,366,367,372,377,383,],[148,148,148,148,-86,148,148,-69,148,-68,148,148,148,148,148,148,148,-75,148,148,148,148,148,148,148,148,148,148,148,148,-85,148,148,148,148,148,-76,-81,-87,148,148,-78,-88,-89,-79,-77,-80,-82,148,148,]),',':([4,17,19,29,40,41,42,44,45,52,53,54,55,57,58,59,62,68,73,75,84,88,89,92,93,97,103,115,116,117,118,134,135,136,139,141,144,149,153,156,158,161,162,165,172,173,174,178,184,188,190,199,209,212,235,236,251,255,257,258,260,262,263,265,268,270,271,272,273,274,275,276,277,278,279,280,281,282,284,286,290,294,302,306,312,315,321,323,327,330,331,336,342,344,347,365,374,375,380,381,382,385,],[-59,-40,-39,48,48,-54,61,65,48,48,48,48,-38,48,48,82,87,91,-67,96,106,-53,109,48,-47,48,126,-48,-65,-64,-66,48,-130,48,-127,-126,-105,-93,-90,-125,-92,-96,-130,-128,-52,-50,-51,48,242,48,48,-95,-91,-121,-120,-49,299,301,-101,304,-122,307,308,310,-129,-116,-119,-111,-106,-113,-115,-109,-110,-112,-108,-107,-118,-114,-117,316,48,320,-103,-124,-94,-123,48,48,343,48,48,351,-102,-83,-104,-84,-98,-131,-131,-100,-97,-99,]),'OUT_PORT':([0,1,4,41,50,56,67,88,110,123,169,170,171,176,177,189,192,198,238,240,241,243,297,298,317,319,],[7,7,-59,-54,-6,-7,-19,-53,-9,-14,-69,-23,-21,-22,-20,-15,-13,-68,-17,7,-16,-18,-12,-11,-8,-10,]),'ENQUEUE':([111,152,154,169,198,221,252,314,329,334,358,359,360,363,366,367,372,],[150,150,-86,-69,-68,-75,-85,-76,-81,-87,-78,-88,-89,-79,-77,-80,-82,]),'LT':([4,17,19,55,139,141,144,149,153,156,158,161,162,164,165,196,199,204,209,212,235,253,255,257,260,266,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,296,302,306,312,315,327,328,335,342,344,347,355,364,365,374,375,380,381,382,385,],[-59,-40,-39,-38,-127,-126,-105,-93,-90,-125,-92,-96,-130,225,-128,225,-95,225,-91,-121,-120,225,225,-101,-122,225,-129,225,-119,-111,-106,-113,225,-109,-110,-112,-108,-107,-118,225,225,225,225,-103,-124,-94,-123,-125,225,225,-102,-83,-104,225,225,-84,-98,-131,-131,-100,-97,-99,]),'DOUBLE_COLON':([4,17,19,55,155,162,],[-59,35,-39,-38,210,-39,]),'PLUS':([4,17,19,55,139,141,144,149,153,156,158,161,162,164,165,196,199,204,209,212,235,253,255,257,260,266,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,296,302,306,312,315,327,328,335,342,344,347,355,364,365,374,375,380,381,382,385,],[-59,-40,-39,-38,-127,-126,-105,-93,-90,-125,-92,-96,-130,227,-128,227,-95,227,-91,-121,-120,227,227,-101,-122,227,-129,227,227,227,-106,227,227,-109,227,227,-108,-107,227,227,227,227,227,-103,-124,-94,-123,-125,227,227,-102,-83,-104,227,227,-84,-98,-131,-131,-100,-97,-99,]),'ACTION':([0,1,4,41,50,56,67,88,110,123,169,170,171,176,177,189,192,198,238,240,241,243,297,298,317,319,],[8,8,-59,-54,-6,-7,-19,-53,-9,-14,-69,-23,-21,-22,-20,-15,-13,-68,-17,8,-16,-18,-12,-11,-8,-10,]),':':([4,99,162,289,],[-59,122,215,215,]),'=':([4,72,93,115,134,],[-59,95,114,175,95,]),'ASSIGN':([4,17,19,55,139,141,144,149,153,156,158,161,162,164,165,190,199,209,212,235,257,260,268,270,271,272,273,274,275,276,277,278,279,280,281,282,284,302,306,312,315,342,344,347,365,374,375,380,381,382,385,],[-59,-40,-39,-38,-127,-126,-105,-93,-90,-125,-92,-96,-130,231,-128,248,-95,-91,-121,-120,-101,-122,-129,-116,-119,-111,-106,-113,-115,-109,-110,-112,-108,-107,-118,-114,-117,-103,-124,-94,-123,-102,-83,-104,-84,-98,-131,-131,-100,-97,-99,]),'$end':([0,1,4,5,10,11,22,24,41,50,56,67,88,110,123,169,170,171,176,177,189,192,198,238,241,243,297,298,317,319,],[-2,-2,-59,0,-5,-3,-1,-4,-54,-6,-7,-19,-53,-9,-14,-69,-23,-21,-22,-20,-15,-13,-68,-17,-16,-18,-12,-11,-8,-10,]),'GT':([4,17,19,55,139,141,144,149,153,156,158,161,162,164,165,196,199,204,209,212,235,253,255,257,260,266,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,296,302,306,312,315,327,328,335,342,344,347,355,364,365,374,375,380,381,382,385,],[-59,-40,-39,-38,-127,-126,-105,-93,-90,-125,-92,-96,-130,219,-128,219,-95,219,-91,-121,-120,219,219,-101,-122,219,-129,219,-119,-111,-106,-113,219,-109,-110,-112,-108,-107,-118,219,219,219,219,-103,-124,-94,-123,-125,219,219,-102,-83,-104,219,219,-84,-98,-131,-131,-100,-97,-99,]),'PROTOCOL':([0,1,4,41,50,56,67,88,110,123,169,170,171,176,177,189,192,198,238,240,241,243,297,298,317,319,],[12,12,-59,-54,-6,-7,-19,-53,-9,-14,-69,-23,-21,-22,-20,-15,-13,-68,-17,12,-16,-18,-12,-11,-8,-10,]),'STRING':([12,18,48,95,96,106,111,114,138,147,152,154,159,168,169,175,197,198,200,213,214,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,248,252,301,303,304,309,313,314,316,329,334,343,351,354,358,359,360,363,366,367,372,377,383,],[30,36,73,117,73,73,156,172,156,156,156,-86,156,156,-69,236,156,-68,156,156,156,156,156,156,156,-75,156,156,156,156,156,156,156,156,156,156,156,156,-85,156,156,327,156,156,-76,336,-81,-87,156,362,156,-78,-88,-89,-79,-77,-80,-82,156,156,]),'STALL_AND_WAIT':([111,152,154,169,198,221,252,314,329,334,358,359,360,363,366,367,372,],[157,157,-86,-69,-68,-75,-85,-76,-81,-87,-78,-88,-89,-79,-77,-80,-82,]),'OOD':([111,138,147,152,154,159,168,169,197,198,200,213,214,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,248,252,301,303,304,309,313,314,329,334,343,354,358,359,360,363,366,367,372,377,383,],[161,161,161,161,-86,161,161,-69,161,-68,161,161,161,161,161,161,161,-75,161,161,161,161,161,161,161,161,161,161,161,161,-85,161,161,161,161,161,-76,-81,-87,161,161,-78,-88,-89,-79,-77,-80,-82,161,161,]),'ENUM':([0,1,4,41,50,56,67,88,110,123,169,170,171,176,177,189,192,198,238,240,241,243,297,298,317,319,],[14,14,-59,-54,-6,-7,-19,-53,-9,-14,-69,-23,-21,-22,-20,-15,-13,-68,-17,14,-16,-18,-12,-11,-8,-10,]),'ELSE':([169,198,334,],[-69,-68,349,]),'MACHINE':([0,1,4,41,50,56,67,88,110,123,169,170,171,176,177,189,192,198,238,240,241,243,297,298,317,319,],[15,15,-59,-54,-6,-7,-19,-53,-9,-14,-69,-23,-21,-22,-20,-15,-13,-68,-17,15,-16,-18,-12,-11,-8,-10,]),'GE':([4,17,19,55,139,141,144,149,153,156,158,161,162,164,165,196,199,204,209,212,235,253,255,257,260,266,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,296,302,306,312,315,327,328,335,342,344,347,355,364,365,374,375,380,381,382,385,],[-59,-40,-39,-38,-127,-126,-105,-93,-90,-125,-92,-96,-130,222,-128,222,-95,222,-91,-121,-120,222,222,-101,-122,222,-129,222,-119,-111,-106,-113,222,-109,-110,-112,-108,-107,-118,222,222,222,222,-103,-124,-94,-123,-125,222,222,-102,-83,-104,222,222,-84,-98,-131,-131,-100,-97,-99,]),'EXTERN_TYPE':([0,1,4,41,50,56,67,88,110,123,169,170,171,176,177,189,192,198,238,240,241,243,297,298,317,319,],[16,16,-59,-54,-6,-7,-19,-53,-9,-14,-69,-23,-21,-22,-20,-15,-13,-68,-17,16,-16,-18,-12,-11,-8,-10,]),'[':([4,17,19,55,135,139,140,141,144,149,153,156,158,161,162,165,199,209,257,260,268,269,302,306,312,315,327,341,342,344,347,365,374,375,380,381,382,385,],[-59,-40,-39,-38,-130,-127,197,-126,200,-93,-90,-125,-92,-96,-130,-128,-95,-91,-101,-122,-129,313,-103,-124,-94,-123,-125,354,-102,-83,-104,-84,-98,-131,-131,-100,-97,-99,]),'INCLUDE':([0,1,4,41,50,56,67,88,110,123,169,170,171,176,177,189,192,198,238,240,241,243,297,298,317,319,],[18,18,-59,-54,-6,-7,-19,-53,-9,-14,-69,-23,-21,-22,-20,-15,-13,-68,-17,18,-16,-18,-12,-11,-8,-10,]),']':([4,17,19,55,139,141,144,149,153,156,158,161,162,165,199,200,209,212,235,253,254,255,256,257,260,268,270,271,272,273,274,275,276,277,278,279,280,281,282,284,301,302,306,312,315,325,335,342,344,347,364,365,374,375,380,381,382,385,],[-59,-40,-39,-38,-127,-126,-105,-93,-90,-125,-92,-96,-130,-128,-95,-2,-91,-121,-120,300,-74,-73,302,-101,-122,-129,-116,-119,-111,-106,-113,-115,-109,-110,-112,-108,-107,-118,-114,-117,-2,-103,-124,-94,-123,-72,350,-102,-83,-104,370,-84,-98,-131,-131,-100,-97,-99,]),'IF':([111,152,154,169,198,221,252,314,329,334,349,358,359,360,363,366,367,372,],[160,160,-86,-69,-68,-75,-85,-76,-81,-87,160,-78,-88,-89,-79,-77,-80,-82,]),'AND':([4,17,19,55,139,141,144,149,153,156,158,161,162,164,165,196,199,204,209,212,235,253,255,257,260,266,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,296,302,306,312,315,327,328,335,342,344,347,355,364,365,374,375,380,381,382,385,],[-59,-40,-39,-38,-127,-126,-105,-93,-90,-125,-92,-96,-130,217,-128,217,-95,217,-91,-121,-120,217,217,-101,-122,217,-129,-116,-119,-111,-106,-113,-115,-109,-110,-112,-108,-107,-118,-114,217,-117,217,-103,-124,-94,-123,-125,217,217,-102,-83,-104,217,217,-84,-98,-131,-131,-100,-97,-99,]),'DASH':([4,17,19,55,111,138,139,141,144,147,149,152,153,154,156,158,159,161,162,164,165,168,169,196,197,198,199,200,204,209,212,213,214,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,235,248,252,253,255,257,260,266,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,296,301,302,303,304,306,309,312,313,314,315,327,328,329,334,335,342,343,344,347,354,355,358,359,360,363,364,365,366,367,372,374,375,377,380,381,382,383,385,],[-59,-40,-39,-38,159,159,-127,-126,-105,159,-93,159,-90,-86,-125,-92,159,-96,-130,224,-128,159,-69,224,159,-68,-95,159,224,-91,-121,159,159,159,159,159,159,-75,159,159,159,159,159,159,159,159,159,159,159,-120,159,-85,224,224,-101,-122,224,-129,224,224,224,-106,224,224,-109,224,224,-108,-107,224,224,224,224,224,159,-103,159,159,-124,159,-94,159,-76,-123,-125,224,-81,-87,224,-102,159,-83,-104,159,224,-78,-88,-89,-79,224,-84,-77,-80,-82,-98,-131,159,-131,-100,-97,159,-99,]),'RETURN':([111,152,154,169,198,221,252,314,329,334,358,359,360,363,366,367,372,],[138,138,-86,-69,-68,-75,-85,-76,-81,-87,-78,-88,-89,-79,-77,-80,-82,]),'EQ':([4,17,19,55,139,141,144,149,153,156,158,161,162,164,165,196,199,204,209,212,235,253,255,257,260,266,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,296,302,306,312,315,327,328,335,342,344,347,355,364,365,374,375,380,381,382,385,],[-59,-40,-39,-38,-127,-126,-105,-93,-90,-125,-92,-96,-130,230,-128,230,-95,230,-91,-121,-120,230,230,-101,-122,230,-129,230,-119,-111,-106,-113,-115,-109,-110,-112,-108,-107,-118,-114,230,230,230,-103,-124,-94,-123,-125,230,230,-102,-83,-104,230,230,-84,-98,-131,-131,-100,-97,-99,]),'STRUCT':([0,1,4,41,50,56,67,88,110,123,169,170,171,176,177,189,192,198,238,240,241,243,297,298,317,319,],[20,20,-59,-54,-6,-7,-19,-53,-9,-14,-69,-23,-21,-22,-20,-15,-13,-68,-17,20,-16,-18,-12,-11,-8,-10,]),'THIS':([111,138,147,152,154,159,168,169,197,198,200,213,214,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,248,252,301,303,304,309,313,314,329,334,343,354,358,359,360,363,366,367,372,377,383,],[163,163,163,163,-86,163,163,-69,163,-68,163,163,163,163,163,163,163,-75,163,163,163,163,163,163,163,163,163,163,163,163,-85,163,163,163,163,163,-76,-81,-87,163,163,-78,-88,-89,-79,-77,-80,-82,163,163,]),'COPY_HEAD':([111,152,154,169,198,221,252,314,329,334,358,359,360,363,366,367,372,],[151,151,-86,-69,-68,-75,-85,-76,-81,-87,-78,-88,-89,-79,-77,-80,-82,]),'STATE_DECL':([0,1,4,41,50,56,67,88,110,123,169,170,171,176,177,189,192,198,238,240,241,243,297,298,317,319,],[21,21,-59,-54,-6,-7,-19,-53,-9,-14,-69,-23,-21,-22,-20,-15,-13,-68,-17,21,-16,-18,-12,-11,-8,-10,]),'CHECK_ALLOCATE':([111,152,154,169,198,221,252,314,329,334,358,359,360,363,366,367,372,],[146,146,-86,-69,-68,-75,-85,-76,-81,-87,-78,-88,-89,-79,-77,-80,-82,]),'LIT_BOOL':([111,114,138,147,152,154,159,168,169,197,198,200,213,214,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,248,252,301,303,304,309,313,314,329,334,343,354,358,359,360,363,366,367,372,377,383,],[165,174,165,165,165,-86,165,165,-69,165,-68,165,165,165,165,165,165,165,-75,165,165,165,165,165,165,165,165,165,165,165,165,-85,165,165,165,165,165,-76,-81,-87,165,165,-78,-88,-89,-79,-77,-80,-82,165,165,]),'IS_VALID':([111,138,147,152,154,159,168,169,197,198,200,213,214,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,248,252,301,303,304,309,313,314,329,334,343,354,358,359,360,363,366,367,372,377,383,],[166,166,166,166,-86,166,166,-69,166,-68,166,166,166,166,166,166,166,-75,166,166,166,166,166,166,166,166,166,166,166,166,-85,166,166,166,166,166,-76,-81,-87,166,166,-78,-88,-89,-79,-77,-80,-82,166,166,]),'CHECK_STOP_SLOTS':([111,152,154,169,198,221,252,314,329,334,358,359,360,363,366,367,372,],[167,167,-86,-69,-68,-75,-85,-76,-81,-87,-78,-88,-89,-79,-77,-80,-82,]),'NOT':([111,138,147,152,154,159,168,169,197,198,200,213,214,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,248,252,301,303,304,309,313,314,329,334,343,354,358,359,360,363,366,367,372,377,383,],[168,168,168,168,-86,168,168,-69,168,-68,168,168,168,168,168,168,168,-75,168,168,168,168,168,168,168,168,168,168,168,168,-85,168,168,168,168,168,-76,-81,-87,168,168,-78,-88,-89,-79,-77,-80,-82,168,168,]),'{':([4,26,49,61,68,71,73,74,75,83,90,91,92,93,97,98,101,102,112,113,115,116,117,118,119,120,122,133,172,173,174,182,236,249,291,311,349,353,356,],[-59,43,-61,43,-45,-46,-67,-60,-63,104,111,-2,-2,-47,-2,121,124,125,-44,111,-48,-65,-64,-66,-62,111,-2,43,-52,-50,-51,240,-49,43,111,111,111,111,111,]),'}':([1,4,10,11,24,41,43,50,56,62,63,64,67,85,86,87,88,104,107,108,110,111,121,123,124,125,127,131,132,142,152,154,169,170,171,176,177,179,180,181,183,185,186,187,189,191,192,198,208,221,238,239,240,241,243,244,252,287,288,292,297,298,314,317,319,322,329,334,337,352,358,359,360,363,366,367,372,],[-2,-59,-5,-3,-4,-54,-2,-6,-7,-2,88,-58,-19,-2,-57,-2,-53,-2,-55,-56,-9,169,-2,-14,-2,-2,189,-2,-25,198,-71,-86,-69,-23,-21,-22,-20,238,-2,-30,241,243,-2,-33,-15,-24,-13,-68,-70,-75,-17,-29,-2,-16,-18,-32,-85,-31,317,-27,-12,-11,-76,-8,-10,-28,-81,-87,-34,-26,-78,-88,-89,-79,-77,-80,-82,]),'OR':([4,17,19,55,139,141,144,149,153,156,158,161,162,164,165,196,199,204,209,212,235,253,255,257,260,266,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,296,302,306,312,315,327,328,335,342,344,347,355,364,365,374,375,380,381,382,385,],[-59,-40,-39,-38,-127,-126,-105,-93,-90,-125,-92,-96,-130,232,-128,232,-95,232,-91,-121,-120,232,232,-101,-122,232,-129,-116,-119,-111,-106,-113,-115,-109,-110,-112,-108,-107,-118,-114,232,-117,232,-103,-124,-94,-123,-125,232,232,-102,-83,-104,232,232,-84,-98,-131,-131,-100,-97,-99,]),'IN_PORT':([0,1,4,41,50,56,67,88,110,123,169,170,171,176,177,189,192,198,238,240,241,243,297,298,317,319,],[23,23,-59,-54,-6,-7,-19,-53,-9,-14,-69,-23,-21,-22,-20,-15,-13,-68,-17,23,-16,-18,-12,-11,-8,-10,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'decl':([0,1,240,],[1,1,1,]),'statements':([90,113,120,291,311,349,353,356,],[110,170,176,319,334,359,363,366,]),'type_enums':([121,180,],[179,239,]),'pairsx':([48,96,106,],[74,119,74,]),'type_members':([104,124,131,],[127,183,191,]),'statements_inner':([111,152,],[142,208,]),'enumeration':([111,138,147,152,159,168,197,200,213,214,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,242,248,301,303,304,309,313,343,354,377,383,],[149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,290,149,149,149,149,149,149,149,149,149,149,]),'file':([0,],[5,]),'type_state':([125,186,],[186,186,]),'type_member':([104,124,131,],[131,131,131,]),'type_or_void':([104,124,131,],[128,128,128,]),'param':([47,51,91,122,],[68,68,68,68,]),'aexpr':([111,138,147,152,159,168,197,200,213,214,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,248,301,303,304,309,313,343,354,377,383,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),'field':([371,378,],[374,381,]),'literal':([111,138,147,152,159,168,197,200,213,214,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,248,301,303,304,309,313,343,354,377,383,],[158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,]),'params':([47,51,91,122,],[69,76,112,182,]),'statement':([111,152,],[152,152,]),'var':([109,111,126,138,147,152,159,168,195,197,200,203,205,206,207,211,213,214,216,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,248,301,303,304,308,309,310,313,324,343,354,361,373,377,383,],[136,153,188,153,153,153,153,153,251,153,153,259,261,262,263,265,153,153,269,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,285,286,153,153,153,153,331,153,333,153,341,153,153,368,376,153,153,]),'if_statement':([111,152,349,],[154,154,360,]),'type':([0,1,25,32,34,37,38,47,51,65,82,91,104,111,122,124,131,138,143,147,152,159,168,197,200,202,213,214,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,240,247,248,299,301,303,304,307,309,313,320,343,354,377,383,],[9,9,40,52,54,57,58,70,70,89,103,70,130,155,70,130,130,155,199,155,155,155,155,155,155,258,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,9,294,155,323,155,155,155,330,155,155,294,155,155,155,155,]),'empty':([0,1,29,40,43,45,47,51,52,53,54,57,58,62,84,85,87,91,92,97,104,121,122,124,125,131,134,136,178,180,186,188,190,200,214,240,247,290,301,303,309,320,321,323,330,331,377,383,],[10,10,49,49,64,49,71,71,49,49,49,49,49,64,49,64,64,71,49,49,132,181,71,132,187,132,49,49,49,181,187,49,49,254,254,10,293,49,254,254,254,293,49,49,49,49,254,254,]),'declsx':([0,1,240,],[11,24,11,]),'idents':([26,61,133,249,],[42,84,192,297,]),'void':([0,1,104,124,131,240,],[13,13,129,129,129,13,]),'identx':([43,62,85,87,],[63,86,107,108,]),'type_states':([125,186,],[185,244,]),'pair':([48,96,106,],[75,75,75,]),'type_enum':([121,180,],[180,180,]),'typestr':([0,1,25,32,34,37,38,47,51,65,82,91,104,111,122,124,131,138,143,147,152,159,168,197,200,202,213,214,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,240,247,248,299,301,303,304,307,309,313,320,343,354,377,383,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'types':([247,320,],[295,338,]),'pairs':([29,40,45,52,53,54,57,58,84,92,97,134,136,178,188,190,290,321,323,330,331,],[46,60,66,77,78,79,80,81,105,113,120,193,194,237,245,246,318,339,340,345,346,]),'ident':([0,1,9,13,25,26,27,28,32,33,34,35,37,38,39,43,47,48,51,61,62,65,70,82,85,87,91,94,95,96,104,106,109,111,121,122,124,125,126,128,131,133,138,143,147,152,155,159,168,180,186,195,197,200,201,202,203,205,206,207,210,211,213,214,215,216,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,240,242,247,248,249,299,301,303,304,307,308,309,310,313,320,324,343,354,361,371,373,377,378,383,],[19,19,29,31,19,41,44,45,19,53,19,55,19,19,59,62,19,72,19,41,62,19,93,19,62,62,19,115,116,72,19,134,135,162,178,19,19,184,135,190,19,41,162,19,162,162,209,162,162,178,184,135,162,162,257,19,135,135,135,135,264,135,162,162,268,135,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,135,135,19,289,19,162,41,19,162,162,162,19,135,162,135,162,19,135,162,162,135,375,135,162,380,162,]),'expr':([111,138,147,152,159,168,197,200,213,214,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,248,301,303,304,309,313,343,354,377,383,],[164,196,204,164,212,235,253,255,266,255,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,296,255,255,328,255,335,355,364,255,255,]),'exprs':([200,214,301,303,309,377,383,],[256,267,325,326,332,379,384,]),'decls':([0,240,],[22,288,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> file","S'",1,None,None,None),
  ('file -> decls','file',1,'p_file','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',216),
  ('empty -> <empty>','empty',0,'p_empty','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',220),
  ('decls -> declsx','decls',1,'p_decls','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',223),
  ('declsx -> decl declsx','declsx',2,'p_declsx__list','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',227),
  ('declsx -> empty','declsx',1,'p_declsx__none','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',237),
  ('decl -> PROTOCOL STRING SEMI','decl',3,'p_decl__protocol','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',241),
  ('decl -> INCLUDE STRING SEMI','decl',3,'p_decl__include','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',250),
  ('decl -> MACHINE ( ident pairs ) : params { decls }','decl',10,'p_decl__machine','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',256),
  ('decl -> ACTION ( ident pairs ) statements','decl',6,'p_decl__action','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',260),
  ('decl -> IN_PORT ( ident , type , var pairs ) statements','decl',10,'p_decl__in_port','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',264),
  ('decl -> OUT_PORT ( ident , type , var pairs ) SEMI','decl',10,'p_decl__out_port','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',268),
  ('decl -> TRANS ( idents , idents , ident pairs ) idents','decl',10,'p_decl__trans0','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',272),
  ('decl -> TRANS ( idents , idents pairs ) idents','decl',8,'p_decl__trans1','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',276),
  ('decl -> EXTERN_TYPE ( type pairs ) SEMI','decl',6,'p_decl__extern0','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',280),
  ('decl -> GLOBAL ( type pairs ) { type_members }','decl',8,'p_decl__global','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',285),
  ('decl -> STRUCT ( type pairs ) { type_members }','decl',8,'p_decl__struct','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',290),
  ('decl -> ENUM ( type pairs ) { type_enums }','decl',8,'p_decl__enum','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',294),
  ('decl -> STATE_DECL ( type pairs ) { type_states }','decl',8,'p_decl__state_decl','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',299),
  ('decl -> type ident pairs SEMI','decl',4,'p_decl__object','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',305),
  ('decl -> void ident ( params ) pairs SEMI','decl',7,'p_decl__func_decl','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',309),
  ('decl -> type ident ( params ) pairs SEMI','decl',7,'p_decl__func_decl','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',310),
  ('decl -> void ident ( params ) pairs statements','decl',7,'p_decl__func_def','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',314),
  ('decl -> type ident ( params ) pairs statements','decl',7,'p_decl__func_def','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',315),
  ('type_members -> type_member type_members','type_members',2,'p_type_members__list','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',320),
  ('type_members -> empty','type_members',1,'p_type_members__empty','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',324),
  ('type_member -> type_or_void ident ( types ) pairs SEMI','type_member',7,'p_type_method__0','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',328),
  ('type_member -> type_or_void ident pairs SEMI','type_member',4,'p_type_member__1','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',332),
  ('type_member -> type_or_void ident ASSIGN expr SEMI','type_member',5,'p_type_member__2','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',336),
  ('type_enums -> type_enum type_enums','type_enums',2,'p_type_enums__list','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',342),
  ('type_enums -> empty','type_enums',1,'p_type_enums__empty','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',346),
  ('type_enum -> ident pairs SEMI','type_enum',3,'p_type_enum','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',350),
  ('type_states -> type_state type_states','type_states',2,'p_type_states__list','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',355),
  ('type_states -> empty','type_states',1,'p_type_states__empty','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',359),
  ('type_state -> ident , enumeration pairs SEMI','type_state',5,'p_type_state','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',363),
  ('types -> type , types','types',3,'p_types__multiple','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',368),
  ('types -> type','types',1,'p_types__one','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',372),
  ('types -> empty','types',1,'p_types__empty','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',376),
  ('typestr -> typestr DOUBLE_COLON ident','typestr',3,'p_typestr__multi','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',380),
  ('typestr -> ident','typestr',1,'p_typestr__single','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',384),
  ('type -> typestr','type',1,'p_type__one','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',388),
  ('void -> VOID','void',1,'p_void','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',392),
  ('type_or_void -> type','type_or_void',1,'p_type_or_void','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',396),
  ('type_or_void -> void','type_or_void',1,'p_type_or_void','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',397),
  ('params -> param , params','params',3,'p_params__many','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',402),
  ('params -> param','params',1,'p_params__one','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',406),
  ('params -> empty','params',1,'p_params__none','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',410),
  ('param -> type ident','param',2,'p_param','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',414),
  ('param -> type STAR ident','param',3,'p_param__pointer','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',418),
  ('param -> type STAR ident = STRING','param',5,'p_param__pointer_default','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',422),
  ('param -> type ident = NUMBER','param',4,'p_param__default_number','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',426),
  ('param -> type ident = LIT_BOOL','param',4,'p_param__default_bool','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',430),
  ('param -> type ident = STRING','param',4,'p_param__default_string','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',434),
  ('idents -> { identx }','idents',3,'p_idents__braced','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',439),
  ('idents -> ident','idents',1,'p_idents__bare','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',443),
  ('identx -> ident SEMI identx','identx',3,'p_identx__multiple_1','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',447),
  ('identx -> ident , identx','identx',3,'p_identx__multiple_1','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',448),
  ('identx -> ident identx','identx',2,'p_identx__multiple_2','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',452),
  ('identx -> empty','identx',1,'p_identx__single','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',456),
  ('ident -> IDENT','ident',1,'p_ident','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',460),
  ('pairs -> , pairsx','pairs',2,'p_pairs__list','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',465),
  ('pairs -> empty','pairs',1,'p_pairs__empty','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',469),
  ('pairsx -> pair , pairsx','pairsx',3,'p_pairsx__many','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',473),
  ('pairsx -> pair','pairsx',1,'p_pairsx__one','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',478),
  ('pair -> ident = STRING','pair',3,'p_pair__assign','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',483),
  ('pair -> ident = ident','pair',3,'p_pair__assign','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',484),
  ('pair -> ident = NUMBER','pair',3,'p_pair__assign','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',485),
  ('pair -> STRING','pair',1,'p_pair__literal','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',489),
  ('statements -> { statements_inner }','statements',3,'p_statements__inner','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',494),
  ('statements -> { }','statements',2,'p_statements__none','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',498),
  ('statements_inner -> statement statements_inner','statements_inner',2,'p_statements_inner__many','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',502),
  ('statements_inner -> statement','statements_inner',1,'p_statements_inner__one','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',506),
  ('exprs -> expr , exprs','exprs',3,'p_exprs__multiple','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',510),
  ('exprs -> expr','exprs',1,'p_exprs__one','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',514),
  ('exprs -> empty','exprs',1,'p_exprs__empty','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',518),
  ('statement -> expr SEMI','statement',2,'p_statement__expression','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',522),
  ('statement -> expr ASSIGN expr SEMI','statement',4,'p_statement__assign','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',526),
  ('statement -> ENQUEUE ( var , type pairs ) statements','statement',8,'p_statement__enqueue','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',530),
  ('statement -> STALL_AND_WAIT ( var , var ) SEMI','statement',7,'p_statement__stall_and_wait','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',534),
  ('statement -> PEEK ( var , type pairs ) statements','statement',8,'p_statement__peek','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',538),
  ('statement -> COPY_HEAD ( var , var pairs ) SEMI','statement',8,'p_statement__copy_head','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',542),
  ('statement -> CHECK_ALLOCATE ( var ) SEMI','statement',5,'p_statement__check_allocate','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',546),
  ('statement -> CHECK_STOP_SLOTS ( var , STRING , STRING ) SEMI','statement',9,'p_statement__check_stop','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',550),
  ('aexpr -> STATIC_CAST ( type , expr )','aexpr',6,'p_statement__static_cast','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',554),
  ('aexpr -> STATIC_CAST ( type , STRING , expr )','aexpr',8,'p_statement__static_cast_ptr','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',558),
  ('statement -> RETURN expr SEMI','statement',3,'p_statement__return','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',562),
  ('statement -> if_statement','statement',1,'p_statement__if','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',566),
  ('if_statement -> IF ( expr ) statements','if_statement',5,'p_if_statement__if','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',570),
  ('if_statement -> IF ( expr ) statements ELSE statements','if_statement',7,'p_if_statement__if_else','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',574),
  ('if_statement -> IF ( expr ) statements ELSE if_statement','if_statement',7,'p_statement__if_else_if','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',578),
  ('aexpr -> var','aexpr',1,'p_expr__var','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',583),
  ('aexpr -> type ident','aexpr',2,'p_expr__localvar','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',587),
  ('aexpr -> literal','aexpr',1,'p_expr__literal','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',591),
  ('aexpr -> enumeration','aexpr',1,'p_expr__enumeration','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',595),
  ('aexpr -> ident ( exprs )','aexpr',4,'p_expr__func_call','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',599),
  ('aexpr -> NEW type','aexpr',2,'p_expr__new','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',603),
  ('aexpr -> OOD','aexpr',1,'p_expr__null','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',607),
  ('aexpr -> THIS DOT var [ expr ] DOT var DOT ident ( exprs )','aexpr',13,'p_expr__local_chip_method','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',612),
  ('aexpr -> THIS DOT var [ expr ] DOT var DOT field','aexpr',10,'p_expr__local_chip_member','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',617),
  ('aexpr -> CHIP [ expr ] DOT var [ expr ] DOT var DOT ident ( exprs )','aexpr',16,'p_expr__specified_chip_method','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',622),
  ('aexpr -> CHIP [ expr ] DOT var [ expr ] DOT var DOT field','aexpr',13,'p_expr__specified_chip_member','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',628),
  ('aexpr -> aexpr DOT ident','aexpr',3,'p_expr__member','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',632),
  ('aexpr -> aexpr DOT ident ( exprs )','aexpr',6,'p_expr__member_method_call','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',636),
  ('aexpr -> aexpr [ exprs ]','aexpr',4,'p_expr__member_method_call_lookup','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',640),
  ('aexpr -> type DOUBLE_COLON ident ( exprs )','aexpr',6,'p_expr__class_method_call','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',644),
  ('expr -> aexpr','expr',1,'p_expr__aexpr','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',648),
  ('expr -> expr STAR expr','expr',3,'p_expr__binary_op','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',652),
  ('expr -> expr SLASH expr','expr',3,'p_expr__binary_op','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',653),
  ('expr -> expr PLUS expr','expr',3,'p_expr__binary_op','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',654),
  ('expr -> expr DASH expr','expr',3,'p_expr__binary_op','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',655),
  ('expr -> expr LT expr','expr',3,'p_expr__binary_op','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',656),
  ('expr -> expr GT expr','expr',3,'p_expr__binary_op','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',657),
  ('expr -> expr LE expr','expr',3,'p_expr__binary_op','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',658),
  ('expr -> expr GE expr','expr',3,'p_expr__binary_op','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',659),
  ('expr -> expr EQ expr','expr',3,'p_expr__binary_op','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',660),
  ('expr -> expr NE expr','expr',3,'p_expr__binary_op','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',661),
  ('expr -> expr AND expr','expr',3,'p_expr__binary_op','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',662),
  ('expr -> expr OR expr','expr',3,'p_expr__binary_op','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',663),
  ('expr -> expr RIGHTSHIFT expr','expr',3,'p_expr__binary_op','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',664),
  ('expr -> expr LEFTSHIFT expr','expr',3,'p_expr__binary_op','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',665),
  ('expr -> NOT expr','expr',2,'p_expr__unary_op','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',670),
  ('expr -> DASH expr','expr',2,'p_expr__unary_op','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',671),
  ('aexpr -> ( expr )','aexpr',3,'p_expr__parens','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',675),
  ('aexpr -> IS_VALID ( var )','aexpr',4,'p_expr__is_valid_ptr','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',679),
  ('aexpr -> IS_INVALID ( var )','aexpr',4,'p_expr__is_invalid_ptr','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',683),
  ('literal -> STRING','literal',1,'p_literal__string','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',687),
  ('literal -> NUMBER','literal',1,'p_literal__number','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',691),
  ('literal -> FLOATNUMBER','literal',1,'p_literal__float','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',695),
  ('literal -> LIT_BOOL','literal',1,'p_literal__bool','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',699),
  ('enumeration -> ident : ident','enumeration',3,'p_enumeration','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',703),
  ('var -> ident','var',1,'p_var','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',707),
  ('field -> ident','field',1,'p_field','/nfs/ug/homes-5/r/rozhkoda/gem5_old/src/mem/slicc/parser.py',711),
]
